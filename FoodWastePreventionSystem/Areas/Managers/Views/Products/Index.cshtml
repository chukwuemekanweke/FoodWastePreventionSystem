@using PagedList.Mvc
@model PagedList.IPagedList<Product>

@{
    ViewBag.Title = "Index";
}

<div class="row" style="margin-top:5%">
    <div class="col-md-12">
        <p>
            @Html.ActionLink("+ Create New", "Create", "Products", new { Area = "Managers" }, new { @class = "btn btn-primary" })
        </p>
    </div>
</div>

        <div class="row">
            <div class="col-md-12">
                <div class="card-box">
                    <div class="card-box-head  border-b m-t-0">
                        <h4 class="header-title"><b>Products</b> <span class="pull-right m-l-5"><i class="fa fa-cog"></i></span></h4>
                    </div>
                    <div class="card-box-content form-compoenent">
                        <div class="cb-res-table">
                            <div class="cb-table-search">
                                @using (Html.BeginForm("", "", FormMethod.Get))
                                {
                                    <div class="dropdown pull-left ">
                                        <button type="button" class="btn btn-default btn-md dropdown-toggle waves-effect waves-light text-dark" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            Categories <span class="caret"></span>
                                        </button>
                                        <ul class="dropdown-menu whitebg drop-menu-checkbox">
                                            @foreach (var item in ViewBag.Categories)
                                            {
                                                <li>
                                                    <div class="checkbox checkbox-primary">
                                                        <input id="checkbox11" type="checkbox" value="@item" name="searchCategory">
                                                        <label for="checkbox11">@item</label>
                                                    </div>
                                                </li>
                                            }
                                            <li>
                                                <div class="checkbox checkbox-primary">
                                                    <input id="checkbox12" type="checkbox">
                                                    <label for="checkbox12">All Products</label>
                                                </div>
                                            </li>
                                        </ul>
                                        @*<button type="button" class="btn btn-default waves-effect waves-light text-dark">Apply</button>*@
                                    </div>
                                    <div class="input-group pull-right cb-ta-search">


                                        <input type="text" class="form-control" placeholder="Search..." name="searchTerm">
                                        <span class="input-group-btn">
                                            <button class="btn btn-default" type="submit">Go!</button>
                                        </span>

                                    </div>


                                }
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <br>
                        <div class="table-responsive data-table">
                            <table class="table table-bordred table-striped">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th><b>Name</b></th>
                                        <th><b>Description</b></th>
                                        <th><b>Date</b></th>
                                        <th class="text-center"><b>Status</b></th>
                                        <th></th>
                                        <th><b>Action</b></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderBy(X => X.Blacklisted))
                                    {

                                        <tr class=@(item.Blacklisted == true ? "" : "")>
                                            <td>
                                                <div class="checkbox checkbox-primary danger">
                                                    <input type="checkbox" class="checkBox" value="false">
                                                    <label></label>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="thumb-box"> <img src="@( item.Image1 != null ? Url.Action("GetImage1", "Products", new { id = item.Id }) : "")" alt=""> </div>
                                                <b>@item.Name</b>
                                            </td>
                                            <td>@item.Description</td>
                                            <td>@item.DateProductWasRegistered.ToShortDateString()</td>
                                            @if (item.Blacklisted)
                                            {
                                                <td id="@($"status{item.Id}")"><span class="badge btn-danger btn-sm">Inactive</span></td>
                                            }
                                            else
                                            {
                                                <td id="@($"status{item.Id}")"><span class="badge btn-success btn-sm">Active</span></td>
                                            }
                                            <td id="@($"button{item.Id}")">


                                                @if (item.Blacklisted)
                                                {
                                                    <button class="btn btn-default btn-xs unblacklist" type="button" data-id="@item.Id"><span class="ion-arrow-return-left"></span></button>

                                                }
                                                else
                                                {
                                                    <button class="btn btn-default btn-xs blacklist " type="button" data-id="@item.Id"><span class="fa fa-times"></span></button>
                                                }

                                            </td>
                                            <td>
                                                <a class="btn btn-warning" href="@Url.Action("Edit","Products", new { id=item.Id})"><span class="fa fa-edit"></span>Edit</a>
                                                <span>|</span>
                                                <a class="btn btn-primary" href="@Url.Action("Details","Products", new { id=item.Id})"><span class="fa fa-database"></span>Details</a>

                                            </td>
                                        </tr>
                                    }
                                    <tr>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="row mob-center">
                            <div class="col-sm-5">
                                <p>Showing Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
                            </div>
                            <div class="col-sm-7">

                                @Html.PagedListPager(Model, page => Url.Action("Index", new
                   {
                       page = page,
                       searchTerm = ViewBag.SearchTerm,
                       searchCategory = ViewBag.SearchCategory
                   }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                                <br />



                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @section Scripts{
            @*<script src="~/Areas/Managers/Scripts/IndexScript.js"></script>*@
            @*<script src="~/Scripts/jquery-1.10.2.intellisense.js"></script>*@
            <script>
                $("document").ready(function () {
                    $(".table").on("click", ".blacklist", toggleProductState);
                    $(".table").on("click", ".unblacklist", toggleProductState);



                    function toggleProductState() {
                        var productId = $(this).attr("data-id");

                        $.ajax({
                            type: 'Get',
                            url: "@Url.Action("ToggleProductStatus", "Products", new { area = "Managers" })", // requesting partial view
                            dataType: 'json',
                            data: { "id": productId },
                            beforeSend: function () {
                                $(this).addClass("disabled");
                            },
                            complete: function () {
                                $(this).removeClass("disabled");
                            },
                            success: function (data) {
                                var statusCell = $(`#status${productId}`)
                                statusCell.empty();
                                var buttonCell = $(`#button${productId}`)
                                buttonCell.empty();

                                if (data.Blacklisted == false) {

                                    statusCell.append(`<span class="badge btn-success btn-sm">Active</span>`)
                                    buttonCell.append(`<button class="btn btn-default btn-xs blacklist " type="button" data-id="${productId}"><span class="fa fa-times"></span></button>`);

                                }
                                else {
                                    statusCell.append(`<span class="badge btn-danger btn-sm">Inactive</span>`)

                                    buttonCell.append(`<button class="btn btn-default btn-xs unblacklist" type="button" data-id="${productId}"><span class="ion-arrow-return-left"></span></button>`);
                                }


                            },
                            error: function (xhr, status, error) {
                                console.log(xhr);
                                console.log(status);
                                console.log(error);

                                alert("Oops!! An Error Occured Please retry. Error Information: " + xhr.responseText);

                            }
                        });
                    }
                });
            </script>
        }
